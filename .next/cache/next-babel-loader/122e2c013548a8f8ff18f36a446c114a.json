{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\PROJETS\\\\Portfolio\\\\site\\\\pages\\\\projets\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport { useState, useEffect } from \"react\";\nimport { gsap } from 'gsap';\nimport $ from 'jquery';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nexport default function Projets() {\n  var _this = this;\n\n  var _useState = useState(0),\n      index = _useState[0],\n      setIndex = _useState[1];\n\n  var _useState2 = useState(undefined),\n      isMobile = _useState2[0],\n      setIsMobile = _useState2[1];\n\n  useEffect(function () {\n    setIsMobile(window.screen.availWidth < 500);\n  }, []);\n\n  var _useSWR = useSWR('/api/projets', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }, \"Failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  $(window).on('touchmove', function () {\n    var position = $('.projets').scrollTop();\n    var height = $(window).height();\n    setIndex(Math.round(position / height));\n    var tl = gsap.timeline({\n      repeat: 2,\n      repeatDelay: 1,\n      yoyo: true\n    });\n    tl.to('.projets', {\n      duration: 1,\n      opacity: 0\n    });\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"main\", {\n    className: \"projets\",\n    style: {\n      backgroundImage: isMobile ? \"url(\".concat(data[index].thumbnail, \")\") : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }\n  }, \"Retour a l'acceuil\"))), data.map(function (_ref, index) {\n    var titre = _ref.titre,\n        link = _ref.link,\n        thumbnail = _ref.thumbnail;\n    return __jsx(\"div\", {\n      key: titre,\n      id: index,\n      style: {\n        backgroundImage: !isMobile ? \"url(\".concat(data[index].thumbnail, \")\") : \"\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, titre), __jsx(Link, {\n      href: \"/projets/[projet]\",\n      as: \"/projets/\".concat(link),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }, \"Voir le projet\"))));\n  })));\n}","map":{"version":3,"sources":["D:/Bureau/PROJETS/Portfolio/site/pages/projets/index.js"],"names":["useSWR","Link","Layout","useState","useEffect","gsap","$","fetcher","url","fetch","then","res","json","Projets","index","setIndex","undefined","isMobile","setIsMobile","window","screen","availWidth","data","error","on","position","scrollTop","height","Math","round","tl","timeline","repeat","repeatDelay","yoyo","to","duration","opacity","backgroundImage","thumbnail","map","titre","link"],"mappings":"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","sourcesContent":["import useSWR from 'swr'\r\nimport Link from 'next/link'\r\nimport Layout from '../../components/layout'\r\nimport {useState, useEffect} from \"react\"\r\nimport {gsap} from 'gsap'\r\n\r\nimport $ from 'jquery'\r\nconst fetcher = url => fetch(url).then(res => res.json())\r\n\r\nexport default function Projets() {\r\n    const [index, setIndex] = useState(0)\r\n    const [isMobile , setIsMobile] = useState(undefined)\r\n\r\n    useEffect(() =>{\r\n        setIsMobile(window.screen.availWidth < 500)\r\n    },[])\r\n\r\n    const { data, error } = useSWR('/api/projets', fetcher)\r\n    if (error) return <div>Failed to load</div>\r\n    if (!data) return <div>Loading...</div>\r\n\r\n\r\n    $(window).on('touchmove', () => {\r\n        const position  = $('.projets').scrollTop();\r\n        const height = $(window).height()\r\n        setIndex(Math.round(position/height))\r\n        var tl = gsap.timeline({repeat: 2, repeatDelay: 1, yoyo: true});\r\n        tl.to('.projets',{duration:1, opacity:0})\r\n    });\r\n\r\n    return (\r\n        <Layout>\r\n            <main className=\"projets\" style={{backgroundImage: isMobile ? `url(${data[index].thumbnail})` : \"\"}}>\r\n                <nav>\r\n                    <Link href=\"/\"><a>Retour a l'acceuil</a></Link>\r\n                </nav>\r\n                {\r\n                    data.map(({titre, link, thumbnail}, index) => {\r\n                        return (\r\n                            <div key={titre} id={index} style={{backgroundImage: !isMobile ? `url(${data[index].thumbnail})` : \"\"}}>\r\n                                <div>\r\n                                    <h1>{titre}</h1>\r\n                                    <Link \r\n                                        href=\"/projets/[projet]\" \r\n                                        as={`/projets/${link}`}\r\n                                    >\r\n                                        <a>Voir le projet</a>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </main>\r\n        </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}