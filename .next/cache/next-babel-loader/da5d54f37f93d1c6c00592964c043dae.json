{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\portfolio\\\\pages\\\\projets\\\\[projet].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nconst fetcher = async url => {\n  const res = await fetch(url);\n  const data = await res.json();\n\n  if (res.status !== 200) {\n    throw new Error(data.message);\n  }\n\n  return data;\n};\n\nexport default function Projet() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(() => query.id && `/api/${query.id}`, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }, error.message);\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"main\", {\n    className: \"projet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, titre), __jsx(Link, {\n    href: \"/projets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Retour aux projets\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, images.map(image => {\n    return __jsx(\"img\", {\n      src: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 36\n      }\n    });\n  }), videos.map(video => {\n    return __jsx(\"iframe\", {\n      src: video,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 36\n      }\n    });\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Description\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, description), liens.length > 0 ? __jsx(React.Fragment, null, liens.map(({\n    label,\n    data\n  }) => {\n    return __jsx(\"a\", {\n      href: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }\n    }, label);\n  })) : \"\")));\n}","map":{"version":3,"sources":["D:/Documents/GitHub/portfolio/pages/projets/[projet].js"],"names":["fetch","Link","Layout","useSWR","useRouter","fetcher","url","res","data","json","status","Error","message","Projet","query","error","id","titre","images","map","image","videos","video","description","liens","length","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAMC,GAAN,IAAa;AACzB,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACM,GAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;;AAEA,MAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACpB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAf,CAAN;AACH;;AACD,SAAOJ,IAAP;AACH,CARD;;AAUA,eAAe,SAASK,MAAT,GAAkB;AAE7B,QAAM;AAAEC,IAAAA;AAAF,MAAYV,SAAS,EAA3B;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQO,IAAAA;AAAR,MAAkBZ,MAAM,CAC1B,MAAMW,KAAK,CAACE,EAAN,IAAa,QAAOF,KAAK,CAACE,EAAG,EADT,EAE1BX,OAF0B,CAA9B;AAKA,MAAIU,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACH,OAAZ,CAAP;AACX,MAAI,CAACJ,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,KADL,CADJ,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAJJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AAClB,WAAO;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAFR,EAOQC,MAAM,CAACF,GAAP,CAAYG,KAAD,IAAW;AAClB,WAAO;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAPR,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAZJ,EAeQC,KAAK,CAACC,MAAN,GAAe,CAAf,GACI,4BAEQD,KAAK,CAACL,GAAN,CAAU,CAAC;AAACO,IAAAA,KAAD;AAAQlB,IAAAA;AAAR,GAAD,KAAmB;AACzB,WACI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBkB,KAAhB,CADJ;AAGH,GAJD,CAFR,CADJ,GAWI,EA1BZ,CAXJ,CADJ,CADJ;AA+CH","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport Link from 'next/link'\r\nimport Layout from '../../components/layout'\r\nimport useSWR from 'swr'\r\nimport { useRouter } from 'next/router'\r\n\r\nconst fetcher = async url => {\r\n    const res = await fetch(url)\r\n    const data = await res.json()\r\n\r\n    if (res.status !== 200) {\r\n        throw new Error(data.message)\r\n    }\r\n    return data\r\n}\r\n\r\nexport default function Projet() {\r\n\r\n    const { query } = useRouter()\r\n    const { data, error } = useSWR(\r\n        () => query.id && `/api/${query.id}`,\r\n        fetcher\r\n    )\r\n\r\n    if (error) return <div>{error.message}</div>\r\n    if (!data) return <div>Loading...</div>\r\n\r\n    return(\r\n        <Layout>\r\n            <main className=\"projet\">\r\n                <nav>\r\n                    <h1>\r\n                        {titre}\r\n                    </h1>\r\n                    <Link href=\"/projets\">\r\n                        <a>\r\n                            Retour aux projets\r\n                        </a>\r\n                    </Link>\r\n                </nav>\r\n                <div>\r\n                    {\r\n                        images.map((image) => {\r\n                            return <img src={image}/>\r\n                        })\r\n                    }\r\n                    {\r\n                        videos.map((video) => {\r\n                            return <iframe src={video}/>\r\n                        })\r\n                    }\r\n                    <h3>Description</h3> \r\n                    <p>{description}</p>\r\n\r\n                    {\r\n                        liens.length > 0 ? (\r\n                            <>\r\n                                {\r\n                                    liens.map(({label, data}) => {\r\n                                        return (\r\n                                            <a href=\"data\">{label}</a>\r\n                                        )   \r\n                                    })\r\n                                }\r\n                            </>\r\n                        ):(\r\n                            \"\"\r\n                        )\r\n                    }\r\n                </div>\r\n                \r\n            </main>\r\n        </Layout>\r\n    ) \r\n}"]},"metadata":{},"sourceType":"module"}