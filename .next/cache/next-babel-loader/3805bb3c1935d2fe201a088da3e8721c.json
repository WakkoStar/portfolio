{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bureau\\\\PROJETS\\\\Portfolio\\\\site\\\\pages\\\\projets\\\\[projet].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-fetch';\nimport { getAllProjectsLinks } from '../../lib/getAllProjectsLinks';\nexport default function Projet({\n  titre,\n  description\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, titre), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, description));\n}\nexport async function getStaticPaths() {\n  const res = await fetch('http://localhost:3000/api/projets');\n  const projets = await res.json();\n  const paths = getAllProjectsLinks(projets);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetch('http://localhost:3000/api/projets');\n  const projets = await res.json();\n  const findProjet = projets.filter(projets => projets.link === params.projet);\n  return {\n    props: findProjet[0]\n  };\n}","map":{"version":3,"sources":["D:/Bureau/PROJETS/Portfolio/site/pages/projets/[projet].js"],"names":["fetch","getAllProjectsLinks","Projet","titre","description","getStaticPaths","res","projets","json","paths","fallback","getStaticProps","params","findProjet","filter","link","projet","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,mBAAR,QAAkC,+BAAlC;AAEA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAhB,EAAqC;AAChD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,WAAJ,CAFJ,CADJ;AAMH;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAAC,mCAAD,CAAvB;AACA,QAAMO,OAAO,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAtB;AACA,QAAMC,KAAK,GAAGR,mBAAmB,CAACM,OAAD,CAAjC;AACA,SAAM;AACFE,IAAAA,KADE;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GAAN;AAIH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAwC;AAC3C,QAAMN,GAAG,GAAG,MAAMN,KAAK,CAAC,mCAAD,CAAvB;AACA,QAAMO,OAAO,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAtB;AACA,QAAMK,UAAU,GAAGN,OAAO,CAACO,MAAR,CAAgBP,OAAD,IAAaA,OAAO,CAACQ,IAAR,KAAiBH,MAAM,CAACI,MAApD,CAAnB;AACA,SAAO;AACHC,IAAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD;AADd,GAAP;AAGH","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {getAllProjectsLinks} from '../../lib/getAllProjectsLinks'\r\n\r\nexport default function Projet({titre, description}){\r\n    return(\r\n        <div>\r\n            <h1>{titre}</h1>\r\n            <p>{description}</p>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const res = await fetch('http://localhost:3000/api/projets')\r\n    const projets = await res.json()\r\n    const paths = getAllProjectsLinks(projets)\r\n    return{\r\n        paths,\r\n        fallback: false\r\n    }\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n    const res = await fetch('http://localhost:3000/api/projets')\r\n    const projets = await res.json()\r\n    const findProjet = projets.filter((projets) => projets.link === params.projet)\r\n    return {\r\n        props: findProjet[0]\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}