{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\portfolio\\\\pages\\\\projets\\\\[projet].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport { getAllProjectsLinks } from '../../lib/getAllProjectsLinks';\nexport default function Projet({\n  titre,\n  description,\n  images,\n  videos,\n  liens\n}) {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"main\", {\n    className: \"projet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, titre), __jsx(Link, {\n    href: \"/projets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, \"Retour aux projets\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, images.map(image => {\n    return __jsx(\"img\", {\n      src: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 36\n      }\n    });\n  }), videos.map(video => {\n    return __jsx(\"iframe\", {\n      src: video,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 36\n      }\n    });\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Description\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, description), liens.length > 0 ? __jsx(React.Fragment, null, liens.map(({\n    label,\n    data\n  }) => {\n    return __jsx(\"a\", {\n      href: \"data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }\n    }, label);\n  })) : \"\")));\n}\nexport async function getStaticPaths(props) {\n  console.log(props);\n  const res = await fetch('http://localhost:3000/api/projets');\n  const projets = await res.json();\n  const paths = getAllProjectsLinks(projets);\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params,\n  req\n}) {\n  const baseUrl = req ? `${req.protocol}://${req.get('Host')}` : '';\n  const res = await fetch(baseUrl + '/api/projets');\n  const projets = await res.json();\n  const findProjet = projets.filter(projets => projets.link === params.projet);\n  return {\n    props: findProjet[0]\n  };\n}","map":{"version":3,"sources":["D:/Documents/GitHub/portfolio/pages/projets/[projet].js"],"names":["fetch","Link","Layout","getAllProjectsLinks","Projet","titre","description","images","videos","liens","map","image","video","length","label","data","getStaticPaths","props","console","log","res","projets","json","paths","fallback","getStaticProps","params","req","baseUrl","protocol","get","findProjet","filter","link","projet"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link'\r\nimport Layout from '../../components/layout'\r\n\r\nimport {getAllProjectsLinks} from '../../lib/getAllProjectsLinks'\r\n\r\nexport default function Projet({titre, description,images, videos, liens }){\r\n    return(\r\n        <Layout>\r\n            <main className=\"projet\">\r\n                <nav>\r\n                    <h1>\r\n                        {titre}\r\n                    </h1>\r\n                    <Link href=\"/projets\">\r\n                        <a>\r\n                            Retour aux projets\r\n                        </a>\r\n                    </Link>\r\n                </nav>\r\n                <div>\r\n                    {\r\n                        images.map((image) => {\r\n                            return <img src={image}/>\r\n                        })\r\n                    }\r\n                    {\r\n                        videos.map((video) => {\r\n                            return <iframe src={video}/>\r\n                        })\r\n                    }\r\n                    <h3>Description</h3> \r\n                    <p>{description}</p>\r\n\r\n                    {\r\n                        liens.length > 0 ? (\r\n                            <>\r\n                                {\r\n                                    liens.map(({label, data}) => {\r\n                                        return (\r\n                                            <a href=\"data\">{label}</a>\r\n                                        )   \r\n                                    })\r\n                                }\r\n                            </>\r\n                        ):(\r\n                            \"\"\r\n                        )\r\n                    }\r\n                </div>\r\n                \r\n            </main>\r\n        </Layout>\r\n    ) \r\n}\r\n\r\nexport async function getStaticPaths(props) {\r\n    console.log(props)\r\n    const res = await fetch('http://localhost:3000/api/projets')\r\n    const projets = await res.json()\r\n    const paths = getAllProjectsLinks(projets)\r\n    return{\r\n        paths,\r\n        fallback: false\r\n    }\r\n}\r\n\r\nexport async function getStaticProps({params, req}) {\r\n    const baseUrl = req ? `${req.protocol}://${req.get('Host')}` : '';\r\n    const res = await fetch(baseUrl + '/api/projets')\r\n    const projets = await res.json()\r\n    const findProjet = projets.filter((projets) => projets.link === params.projet)\r\n    return {\r\n        props: findProjet[0]\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}